import React from "react";
// import { useResizeColumns, useTable } from "react-table";
// import {
//   createColumnHelper,
//   flexRender,
//   getCoreRowModel,
//   useReactTable,
// } from "@tanstack/react-table";
import getAllDriverData from "../../store/LocalAPi/getAllDrivers.json";

import {
  createColumnHelper,
  flexRender,
  getCoreRowModel,
  useReactTable,
} from "@tanstack/react-table";
// import { DndProvider, useDrag, useDrop } from "react-dnd";
// import { HTML5Backend } from "react-dnd-html5-backend";

export default function Trailers() {
  const TableData = React.useMemo(
    () => [
      getAllDriverData.map((ele) => {
        return {
          col1: ele?.data?.Name || "N/A",
          // col2: ele?.data?.Phone || "N/A",
          // col3: ele?.data?.DL || [],
          // col4: ele?.data?.Status,
          // col5: ele?.data?.["DL #"] || "N/A",
          // col6: ele?.data?.State || "N/A",
          // col7: ele?.data?.["License EXP"] || "N/A",
          // col8: ele?.data?.SSN || "N/A",
          // col9: ele?.data?.Bank || "N/A",
          // col10: ele?.data?.Account || "N/A",
          // col11: ele?.data?.Routing || "N/A",
          // col12: ele?.data?.DOB || "N/A",
          // col13: ele?.data?.Application || [],
          // col14: "World",
          // col15: "World",
          // col16: "World",
          // col17: "World",
          // col18: "World",
        };
      }),
    ],
    []
  );

  const columns = React.useMemo(
    () => [
      {
        Header: "Name",
        accessor: "col1", // accessor is the "key" in the data
      },
      // {
      //   Header: "Phone",
      //   accessor: "col2",
      // },
      // {
      //   Header: "DL",
      //   accessor: "col3",
      // },
      // {
      //   Header: "Status",
      //   accessor: "col4",
      // },
      // {
      //   Header: "DL Number",
      //   accessor: "col5",
      // },
      // {
      //   Header: "State",
      //   accessor: "col6",
      // },
      // {
      //   Header: "License EXP",
      //   accessor: "col7",
      // },
      // {
      //   Header: "SSN",
      //   accessor: "col8",
      // },
      // {
      //   Header: "Bank",
      //   accessor: "col9",
      // },
      // {
      //   Header: "Account",
      //   accessor: "col10",
      // },
      // {
      //   Header: "Routing",
      //   accessor: "col11",
      // },
      // {
      //   Header: "DOB",
      //   accessor: "col12",
      // },
      // {
      //   Header: "Application",
      //   accessor: "col13",
      // },
      // {
      //   Header: "Application",
      //   accessor: "col14",
      // },
      // {
      //   Header: "Application",
      //   accessor: "col15",
      // },
      // {
      //   Header: "Application",
      //   accessor: "col16",
      // },
      // {
      //   Header: "Application",
      //   accessor: "col17",
      // },
      // {
      //   Header: "Application",
      //   accessor: "col18",
      // },
    ],
    []
  );

  // const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =
  //   useTable({ columns, TableData });

  return (
    <>Trailers</>
    // <table {...getTableProps()} style={{ border: "solid 1px blue" }}>
    //   <thead>
    //     {headerGroups.map((headerGroup) => (
    //       <tr
    //         className='bg-white border border-sky-500'
    //         {...headerGroup.getHeaderGroupProps()}>
    //         {console.log(headerGroup)}
    //         {headerGroup.headers.map((column) => (
    //           <th {...column.getHeaderProps()}>
    //             {column.render("Header")}

    //             {/* Use column.getResizerProps to hook up the events correctly */}
    //             <div
    //               {...column.getResizerProps()}
    //               className={`resizer ${column.isResizing ? "isResizing" : ""}`}
    //             />
    //           </th>
    //         ))}
    //       </tr>
    //     ))}
    //   </thead>
    //   <tbody {...getTableBodyProps()}>
    //     {rows.map((row) => {
    //       prepareRow(row);
    //       return (
    //         <tr {...row.getRowProps()}>
    //           {row.cells.map((cell) => {
    //             return (
    //               <td
    //                 {...cell.getCellProps()}
    //                 style={{
    //                   padding: "10px",
    //                   border: "solid 1px gray",
    //                   background: "papayawhip",
    //                 }}>
    //                 {cell.render("Cell")}
    //               </td>
    //             );
    //           })}
    //         </tr>
    //       );
    //     })}
    //   </tbody>
    // </table>
  );
}
